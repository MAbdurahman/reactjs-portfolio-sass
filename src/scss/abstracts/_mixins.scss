/*=============================================
            mixins.scss
================================================*/
@use 'breakpoints' as *;

@mixin position($position, $top, $left, $bottom, $right, $width, $height) {
	position: $position;
	top: $top;
	left: $left;
	bottom: $bottom;
	right: $right;
	width: $width;
	height: $height;
}

@mixin align($flex, $justify-content, $align-items, $height) {
	display: $flex;
	align-items: $align-items;
	justify-content: $justify-content;
	height: $height;
}
@mixin button(
	$color1,
	$color2,
	$textColor,
	$height,
	$fontSize,
	$bdr,
	$paddingVertical,
	$paddingHorizontal
) {
	background: linear-gradient(to right, $color1, $color2);
	color: $textColor;
	text-decoration: none;
	height: $height;
	line-height: $height;
	letter-spacing: 1px;
	display: inline-block;
	font-size: $fontSize;
	font-weight: 600;
	border-radius: $bdr;
	padding: $paddingVertical $paddingHorizontal;
	border: none;
	outline: none;
	cursor: pointer;
	text-transform: uppercase;
	transition: background 0.333s ease-in-out;

	&:hover {
		background: linear-gradient(to right, $color1, $color1);
	}
}
@mixin animateMoveUpOrDown(
	$name,
	$duration,
	$timeFunction,
	$delay: 0,
	$count: 1,
	$fillMode: 'forwards',
	$translate1,
	$translate2
) {
	animation: $name $duration $timeFunction $delay+ms $count $fillMode;
	@keyframes #{$name} {
		0% {
			opacity: 0;
			transform: translateY($translate1);
		}
		100% {
			opacity: 1;
			transform: translateY($translate2);
		}
	}
}
@mixin hamburgerSpans($color, $width, $height, $marginTop) {
	width: $width;
	height: $height;
	display: block;
	z-index: 5;
	margin-top: $marginTop;
	background-color: $color;
	border-radius: 5px;
	transition: transform 0.333s ease-out;
	
}
@mixin toggleSpans($backgroundColor, $width, $height, $marginTop) {
	display: block;
	background: $backgroundColor;
	width: $width;
	height: $height;
	margin-top: $marginTop;
	transition: all 0.333s ease-out;

}
@mixin status($backgroundColor, $color) {
	padding: 0.6rem 1.3rem;
	background: $backgroundColor;
	color: $color;
	border-radius: 0.6rem;
	font-size: 1.3rem;
	text-transform: capitalize;
}
@mixin control($height, $paddingY, $paddingX, $color) {
	display: block;
	width: 100%;
	border-radius: 0.4rem;
	outline: none;
	font-size: 1.6rem;
	border: 1px solid $color;
	height: $height;
	padding: $paddingY $paddingX;
}

@mixin responsive($breakpoint) {
	@if $breakpoint == large {
		@media (max-width: $lg) {
			@content;
		}
	}
	@if $breakpoint == medium {
		@media (max-width: $md) {
			@content;
		}
	}
	@if $breakpoint == small {
		@media (max-width: $sm) {
			@content;
		}
	}
	@if $breakpoint == x-small {
		@media (max-width: $xsm) {
			@content;
		}
	}
}
